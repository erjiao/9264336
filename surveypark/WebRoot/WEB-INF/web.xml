<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
  <display-name></display-name>	
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- 通过上下文参数配置spring文件的位置和名称 -->
  <context-param>
  	<param-name>contextConfigLocation</param-name>
  	<param-value>classpath:applicationContext*.xml, classpath:schedules.xml</param-value>
  </context-param>
  
  <!-- 上下文载入监听器, 确保web服务器启动时, 直接完成 spring 容器的初始化  
       将spring 容器存放在 application 中-->
  <listener>
  	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- 
  	openSessionInViewFilter, 该过滤器在 view 渲染时始终开启会话, 一劳永逸的解决hibernate 的懒加载问题 
  	该过滤器必须配置在struts2 过滤器之前,不推荐使用(性能问题)
  <filter>
  	<filter-name>openSessionInViewFilter</filter-name>
  	<filter-class>org.springframework.orm.hibernate4.support.OpenSessionInViewFilter</filter-class>
  </filter>
  
  <filter-mapping>
  	<filter-name>openSessionInViewFilter</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  -->
  
  <!-- 配置strurs2 的过滤器 -->
  <filter>
  	 <filter-name>struts2</filter-name>
  	 <filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter</filter-class>
  </filter>
  
  <filter-mapping>
  	<filter-name>struts2</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <servlet>
  	<servlet-name>service</servlet-name>
  	<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
  	<init-param>
  		<param-name>contextConfigLocation</param-name>
  		<param-value>classpath:spring-remote.xml</param-value>
  	</init-param>
  </servlet>
  
  <servlet-mapping>
  	<servlet-name>service</servlet-name>
  	<url-pattern>*.service</url-pattern>
  </servlet-mapping>
</web-app>
