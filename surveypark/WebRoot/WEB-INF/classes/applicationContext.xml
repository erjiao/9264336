<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.0.xsd">

	<context:property-placeholder location="classpath:db.properties"/>
	<context:component-scan base-package="com.erjiao.surveypark.dao.impl,com.erjiao.surveypark.service.impl,com.erjiao.surveypark.listener,com.erjiao.surveypark.struts2.action"></context:component-scan>
	
	<!-- 配置主数据源 -->
	<bean id="dataSource-main" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"></property>
		<property name="minPoolSize" value="${jdbc.minPoolSize}"></property>
		<property name="initialPoolSize" value="${jdbc.initPoolSize}"></property>
		<property name="acquireIncrement" value="${jdbc.acquireIncrement}"></property>
		
	<!-- 配置从数据源 -->
	</bean>
		<bean id="dataSource-1" parent="dataSource-main">
		<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:orcl1"></property>
	</bean>
	
	<!-- 数据源路由器 -->
	<bean id="dataSourceRouter" class="com.erjiao.surveypark.datasource.SurveyparkDataSourceRouter">
		<property name="targetDataSources">
			<map>
				<entry key="odd" value-ref="dataSource-main"></entry>
				<entry key="even" value-ref="dataSource-1"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource-main"></property>
	</bean>
	<!-- 本地会话工厂bean(spring 整合hiberbate 的核心入口) -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourceRouter"></property>
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
		<property name="mappingDirectoryLocations">
			<list>
				<value>classpath:com/erjiao/surveypark/model</value>
			</list>
		</property>
	</bean>
	
	<!-- Hibernate 事务管理器, 用来在service 层面上实现事务管理, 而且达到平台无关性 -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	
	<!-- 事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager"> 
		<tx:attributes>
			<!-- 写操作 -->
			<tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT"/>
			<tx:method name="batch*" propagation="REQUIRED" isolation="DEFAULT"/>
			
			<!-- 读操作 -->
			<tx:method name="load*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="get*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="find*" propagation="REQUIRED" read-only="true"/>
			
			<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT"/>
		</tx:attributes>
	</tx:advice>
	
	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="cacheManagerFactoryBean" />
	</bean>
	
	<!-- 缓存管理器工厂bean -->
	<bean id="cacheManagerFactoryBean" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean>
	
	<!-- 自定义缓存key生成器 -->
	<bean id="surveyparkKeyGenerator" class="com.erjiao.surveypark.cache.SurveyparkKeyGenerator"></bean>
	
	<!-- 缓存通知 -->
	<cache:advice id="cacheAdivice" cache-manager="cacheManager" key-generator="surveyparkKeyGenerator">
		<cache:caching cache="surveypark">
			<cache:cacheable method="get*"/>
			<cache:cacheable method="load*"/>
			<cache:cacheable method="find*"/>
			
			<cache:cache-evict method="save*" all-entries="true"/>
			<cache:cache-evict method="update*" all-entries="true"/>
			<cache:cache-evict method="delete*" all-entries="true"/>
			<cache:cache-evict method="toggle*" all-entries="true"/>
			<cache:cache-evict method="move*" all-entries="true"/>
			<cache:cache-evict method="batch*" all-entries="true"/>
			<cache:cache-evict method="execute*" all-entries="true"/>
		</cache:caching>
	</cache:advice>
	<!-- 日志记录仪 -->
	<bean id="logger" class="com.erjiao.surveypark.advice.Logger"></bean>
	
	<!-- aop 配置 -->
	<aop:config>
		<!-- 事务切入点通知 -->
		<aop:advisor advice-ref="txAdvice" pointcut="execution(* *..*Service.*(..))" order="2"/>
		
		<!-- 缓存切入点通知 -->
		<aop:advisor advice-ref="cacheAdivice" pointcut="execution(* *..*Service.*(..))" order="0"/>
		
		<!-- Logger 切面 -->
		<aop:aspect id="loggerAspect" ref="logger" order="1">
			<aop:around method="record" pointcut="(execution(* *..*Service.save*(..)) 
											or execution(* *..*Service.update*(..))
											or execution(* *..*Service.delete*(..))
											or execution(* *..*Service.batch*(..))
											or execution(* *..*Service.new*(..))
											or execution(* *..*Service.move*(..))
											or execution(* *..*Service.clear*(..))
											or execution(* *..*Service.toggle*(..)))
											and !bean(logService) 
											"/>
		</aop:aspect>
	</aop:config>
</beans>